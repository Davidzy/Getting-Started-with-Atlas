[[working_with_github]]
== Working with GitHub

Because book files in Atlas are managed with git(((git)))(((GitHub))), you could easily sync those files with a repository on GitHub. This chapter describes that process. 

If you're totally new to link:http://www.github.com[GitHub], the best place to start is the http://help.github.com/[GitHub help pages]. They'll walk you through what you need to know to set up an account, create a repo, set up your security credentials, and so on. Once you've got an account and have successfully completed the steps on http://help.github.com/mac-set-up-git/[setting up git], it's pretty simple to move stuff back and forth between Atlas and GitHub.

To put your code on GitHub, first, create a new repository. You'll be prompted to enter a name, a description, and whether you want to make the repo public or private (available only if you have a paid account). It will look very similar to <<github_new_project>>.

[[github_new_project]]
.Create a new repository on GitHub
[float="none"]
image::images/github_new_project.png["A screenshot of the GitHub interface"]

Once you create a project, you'll see a screen that lists some helpful commands for what you'll do next. Locate the ``Existing Git Repo?'' section and then find the line that looks like this:

[source,console]
----
$ git remote add origin git@github.com:MakerPress/new_project.git
----

It will look something like <<github_new_repo_url>>.

[[github_new_repo_url]]
.The new repo's URL appears in the ``Existing Git Repo?'' section
image::images/github_new_repo_url.png["A screenshot from GitHub showing where a user can find the project URL"]

Once you've got the line, copy the repo's url (in our example, it's _git@github.com:MakerPress/new_project.git_) and enter the following command in the directory where your local Atlas repo is stored. (Note that the word "origin" is the only thing we're changing from the original command.):

[source,console]
----
$ git remote add github git@github.com:MakerPress/new_project.git
----

Once you've set up the new remote, you can push to it with this command:

[source,console]
----
$ git push github master
----

You can then take full advantage of all the amazing features and community available on GitHub.

Conversely, if you already have a repo on GitHub that you'd like to pull into Atlas, all you have to do is clone it down and add a new remote to an Atlas repo, like this:

[source,console]
----
$ git clone git@github.com:MakerPress/new_project.git
Cloning into new_project...
warning: You appear to have cloned an empty repository.
admins-MacBook-Air-2:Desktop odewahn$ cd new_project/
admins-MacBook-Air-2:new_project odewahn$ git remote add atlas https://odewahn%40oreilly.com@atlas-admin.oreilly.com/git/1230000000197.git
admins-MacBook-Air-2:new_project odewahn$ git push atlas master
...
----

As we continue to improve Atlas, we'll add features to allow you to easily move projects back and forth from within the UI.

.Using GitHub Wikis
****
GitHub wikis are really cool, since they store all your data as a git repo that you can clone, just like any other. If you wanted, you could write your entire book on a GitHub wiki using either AsciiDoc or Markdown (if you don't need really complex markup) and then pull it straight into Atlas to build the project.

To clone a GitHub wiki, first find the URL for the wiki's git repo, which appears on the ``Git Access'' tab:

image::images/github_wiki.png["Screenshot of a GitHub wiki"]

Once you have the wiki's URL, you can clone it to your local system and add a remote back to Atlas so that you can move data back and forth with ease:

[source,console]
----
$ git clone git@github.com:MakerPress/new_project.wiki.git
Cloning into new_project.wiki...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (3/3), done.

$ cd new_project.wiki/

$ git remote add atlas https://odewahn%40oreilly.com@atlas-admin.oreilly.com/git/1230000000197.git
$ git push atlas master
----

Note that you'd need to pull in any changes from the GitHub wiki into Atlas.
****

= Index